#include <stdarg.h>
#include <unistd.h>
int _putchar(char c) //_putchar function
{
        return (write(1, &c, 1));
}
int print_str(va_list list)
{
	char *str;
	int str_count = 0;

	str = va_arg(list, char *);
	if (str == NULL)
	{
		str = "(null)";
		while (*str)
		{
			write(1, str, 1);
			str_count++;
			str++;
		}
		return (str_count);
	}
	else
	{
		while (*str)
		{
			write(1, str, 1);
			str_count++;
			str++;
		}
		return (str_count);
	}
}
int print_int(va_list list)
{
	int n = va_arg(list, int);
	int num, last = n % 10, digit, real = 1;
	int  i = 1;

	n = n / 10;
	num = n;

	if (last < 0)
	{
		_putchar('-');
		num = -num;
		n = -n;
		last = -last;
		i++;
	}
	if (num > 0)
	{
		while (num / 10 != 0)
		{
			real = real * 10;
			num = num / 10;
		}
		num = n;
		while (real > 0)
		{
			digit = num / real;
			_putchar(digit + '0');
			num = num - (digit * real);
			real = real / 10;
			i++;
		}
	}
	_putchar(last + '0');

	return (i);
}
int print_binary(va_list list) //print binary function
{
    int num = va_arg(list, unsigned int);
    int array[32];
    int n;
    int counter = 0;
    if (num  == 0)
    {
        return (_putchar('0'));
    }
    for (; num > 0;)
    {
        array[num++] = num % 2;
        num /= 2;
    }
    for (n = counter - 1; n >= 0; n--)
    {
        _putchar(array[n]);
    }
    return (write(1, array, counter));
}
int _printf(const char *format, ...)
{
	int char_count = 0, i;
	va_list list;

	va_start(list, format);

	if (!format || (format[0] == '%' && !format[1]))
		return (-1);
	if (format[0] == '%' && format[1] == ' ' && !format[2])
		return (-1);
	for (i = 0; format && format[i] != '\0'; i++)
	{
		if (format[i] != '%')
			char_count += _putchar(format[i]);
		else if (format[i] == '%')
		{
			i++;
			if (format[i] == 'c')
				char_count += _putchar(va_arg(list, int));
			else if (format[i] == 's')
				char_count += print_str(list);
			else if (format[i] == '%')
				char_count += _putchar('%');
			else if (format[i] == 'i' || format[i] == 'd')
				char_count += print_int(list);
			else if (format[i] == 'b')
			    char_count += print_binary(list);
		}
	}
	va_end(list);
	return (char_count);
}
int main(void)
{
        // _printf("Leo\n");
        // _printf("%c\n", 'v');
        // _printf("%s\n", "String");
        // _printf("%%\n");
        // _printf("no = %i\n", 10);
        // _printf("no = %d\n", 625);
        _printf("the binary of 98 is %b", 98);
}